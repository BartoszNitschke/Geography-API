syntax = "proto3";

package continents;

message Landmark {
    string name = 1;
    string type = 2;
    string description = 3;
}

message LandmarkInput {
    string name = 1;
    string type = 2;
    string description = 3;
}

message Country {
    string name = 1;
    string capital = 2;
    string code = 3;
    repeated Landmark landmarks = 4;
}

message CountryInput {
    string name = 1;
    string capital = 2;
    string code = 3;
    repeated LandmarkInput landmarks = 4;
}

message Continent {
    string name = 1;
    string code = 2;
    repeated Country countries = 3;
    string population = 4;
    string area = 5;
}

message ContinentInput {
    string name = 1;
    string code = 2;
    string population = 3;
    string area = 4;
}

message ContinentFilter {
    string code = 1;
}

message CountryFilter {
    string code = 1;
    string continent_code = 2;
}

message LandmarkFilter {
    string country_code = 1;
    string name = 2;
}

message DeleteResponse {
    bool success = 1;
    string message = 2;
    string code = 3;
}

service ContinentService {
    rpc GetContinents(ContinentFilter) returns (stream Continent);
    rpc GetContinent(ContinentFilter) returns (Continent);
    
    rpc UpdateContinent(ContinentInput) returns (Continent);
    rpc DeleteContinent(ContinentFilter) returns (DeleteResponse);
}

service CountryService {
    rpc GetCountries(CountryFilter) returns (stream Country);
    rpc GetCountry(CountryFilter) returns (Country);
    
    rpc CreateCountry(CountryInput) returns (Country);
    rpc UpdateCountry(CountryInput) returns (Country);
    rpc DeleteCountry(CountryFilter) returns (DeleteResponse);
}

service LandmarkService {
    rpc GetLandmarks(LandmarkFilter) returns (stream Landmark);
    rpc GetLandmark(LandmarkFilter) returns (Landmark);
    
    rpc AddLandmark(LandmarkInput) returns (Landmark);
    rpc UpdateLandmark(LandmarkInput) returns (Landmark);
    rpc DeleteLandmark(LandmarkFilter) returns (DeleteResponse);
} 